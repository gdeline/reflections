Q: What happens when you initialize a repository? Why do you need to do it?-
A: metadata ".git" directory created.  need to do it to use repository

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: intermediate storage - buffer.  value is that you can add in multiple operations and then do a single atomic commit.  less error-prone than having to string together all of the files on one command line

Q: How can you use the staging area to make sure you have one commit per logical change?
A: multiple adds, then confirm everything is in place in staging, then finally do a single commit

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: feature dev, multiple people working on code base.  clear identification of what's being worked on, ability to merge together

Q: How do the diagrams help you visualize the branch structure?
A: Show visually where changes have been made, allow better planning for merges.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A: the work done in a secondary branch is subsumed into the primary.  we represent it in the diagram in that manner as one branch ends where it merges into the other.

Q: What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
A: auto merge (pro, con) : (ease, risk); manual merge (pro, con) : (specific, effort)